<xml xmlns="https://developers.google.com/blockly/xml"><variables></variables><block type="pxt-on-start" id="T]z3f02t08=4:vVHSqx9" x="20" y="20"><statement name="HANDLER"><block type="typescript_statement" id="3WKM12!LXJaQX6D:i,|("><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace カラーセンサー {" line1="" line2="//% block=&quot;COLOR_check&quot;" line3="    export function COLOR_CHIK() {" line4="    " line5="    let MAX = 0" line6="    let BMAP = 0" line7="    let GMAP = 0" line8="    MIN = 800" line9="    MIN = 250" line10="    if (RMAP + (GMAP + BMAP) &gt; MAX) {" line11="        COLOR = &quot;WHT&quot;" line12="    }" line13="    " line14="    if (RMAP + (GMAP + BMAP) &lt;= MIN) {" line15="        COLOR = &quot;BLK&quot;" line16="        if (RMAP + (GMAP + BMAP) &lt; MAX &amp;&amp; RMAP + (GMAP + BMAP) &gt; MIN) {" line17="            if (RMAP &gt; GMAP &amp;&amp; RMAP &gt; BMAP) {" line18="                COLOR = &quot;RED&quot;" line19="            }" line20="            " line21="            if (GMAP &gt; RMAP &amp;&amp; GMAP &gt; BMAP) {" line22="                COLOR = &quot;GRN&quot;" line23="            }" line24="            " line25="            if (BMAP &gt; RMAP &amp;&amp; BMAP &gt; GMAP) {" line26="                COLOR = &quot;BLU&quot;" line27="            }" line28="            " line29="        }" line30="        " line31="    }" line32="    " line33="}" line34="" line35="let B = 0" line36="let G = 0" line37="let R = 0" line38="let COLOR = &quot;&quot;" line39="let RMAP = 0" line40="let MIN = 0" line41="pins.i2cWriteNumber(57, 16587, NumberFormat.UInt16BE, false)" line42="pins.i2cWriteNumber(57, 16396, NumberFormat.UInt16BE, true)" line43="pins.i2cWriteNumber(57, 16640, NumberFormat.UInt16BE, true)" line44="pins.i2cWriteNumber(57, 17041, NumberFormat.UInt16BE, true)" line45="pins.i2cWriteNumber(57, 17410, NumberFormat.UInt16BE, true)" line46="pins.i2cWriteNumber(57, 24576, NumberFormat.UInt16BE, false)" line47="" line48=" basic.forever(function on_forever() {" line49="    " line50="    pins.i2cWriteNumber(57, 80, NumberFormat.UInt8BE, true)" line51="    R = pins.i2cReadNumber(57, NumberFormat.UInt16BE, false)" line52="    pins.i2cWriteNumber(57, 82, NumberFormat.UInt8BE, true)" line53="    G = pins.i2cReadNumber(57, NumberFormat.UInt16BE, false)" line54="    pins.i2cWriteNumber(57, 84, NumberFormat.UInt8BE, true)" line55="    B = pins.i2cReadNumber(57, NumberFormat.UInt16BE, false)" line56="    RMAP = Math.round(Math.round(R / 90))" line57="    RMAP = Math.round(Math.round(G / 100))" line58="    RMAP = Math.round(Math.round(B / 80))" line59="    COLOR_CHIK()" line60="    basic.showString(COLOR)" line61="    basic.pause(1000)" line62="    basic.clearScreen()" line63="})" line64="}" numlines="65"></mutation></block></statement></block></xml>