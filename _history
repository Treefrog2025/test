{"entries":[{"timestamp":1727585222642,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"http"],[-1,"s"],[0,"://"],[-1,"developers.google.com/blockly/xml\"><variables></variables>"],[1,"www.w3.org/1999/xhtml\">\n  "],[0,"<blo"]],"start1":12,"start2":12,"length1":70,"length2":37},{"diffs":[[0,"art\""],[-1," x=\"0\" y=\"0\""],[0,"></b"]],"start1":67,"start2":67,"length1":20,"length2":8},{"diffs":[[0,"</block>"],[1,"\n  "],[0,"<block t"]],"start1":72,"start2":72,"length1":16,"length2":19},{"diffs":[[0,"ver\""],[-1," x=\"205\" y=\"0\""],[0,"></b"]],"start1":107,"start2":107,"length1":22,"length2":8},{"diffs":[[0,"</block>"],[1,"\n"],[0,"</xml>"]],"start1":112,"start2":112,"length1":14,"length2":15}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"basic.forever(function () {\n\t\n})"],[0,"\n"]],"start1":0,"start2":0,"length1":33,"length2":1}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"   \""],[-1,"preferredEditor\": \"blocksprj\""],[1,"additionalFilePaths\": []"],[0,"\n}\n"]],"start1":239,"start2":239,"length1":36,"length2":31}]}]},{"timestamp":1727585801160,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"><block "],[1,"type=\"pxt-on-start\" x=\"0\" y=\"0\"></block><block "],[0,"type=\"de"]],"start1":77,"start2":77,"length1":16,"length2":63}]}]},{"timestamp":1727587875203,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[1,"basic.forever(function () {\n\t\n})"],[0,"\n"]],"start1":0,"start2":0,"length1":1,"length2":33}]}]},{"timestamp":1727587877421,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"iables><"],[1,"block type=\"device_forever\" x=\"205\" y=\"0\"></block><"],[0,"/xml>"]],"start1":71,"start2":71,"length1":13,"length2":64}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"\n"],[-1,"function COLOR_CHIK() {\n    \n    let MAX = 0\n    let BMAP = 0\n    let GMAP = 0\n    MIN = 800\n    MIN = 250\n    if (RMAP + (GMAP + BMAP) > MAX) {\n        COLOR = \"WHT\"\n    }\n    \n    if (RMAP + (GMAP + BMAP) <= MIN) {\n        COLOR = \"BLK\"\n        if (RMAP + (GMAP + BMAP) < MAX && RMAP + (GMAP + BMAP) > MIN) {\n            if (RMAP > GMAP && RMAP > BMAP) {\n                COLOR = \"RED\"\n            }\n            \n            if (GMAP > RMAP && GMAP > BMAP) {\n                COLOR = \"GRN\"\n            }\n            \n            if (BMAP > RMAP && BMAP > GMAP) {\n                COLOR = \"BLU\"\n            }\n            \n        }\n        \n    }\n    \n}\n\nlet B = 0\nlet G = 0\nlet R = 0\nlet COLOR = \"\"\nlet RMAP = 0\nlet MIN = 0\npins.i2cWriteNumber(57, 16587, NumberFormat.UInt16BE, false)\npins.i2cWriteNumber(57, 16396, NumberFormat.UInt16BE, true)\npins.i2cWriteNumber(57, 16640, NumberFormat.UInt16BE, true)\npins.i2cWriteNumber(57, 17041, NumberFormat.UInt16BE, true)\npins.i2cWriteNumber(57, 17410, NumberFormat.UInt16BE, true)\npins.i2cWriteNumber(57, 24576, NumberFormat.UInt16BE, false)\nbasic.forever(function on_forever() {\n    \n    pins.i2cWriteNumber(57, 80, NumberFormat.UInt8BE, true)\n    R = pins.i2cReadNumber(57, NumberFormat.UInt16BE, false)\n    pins.i2cWriteNumber(57, 82, NumberFormat.UInt8BE, true)\n    G = pins.i2cReadNumber(57, NumberFormat.UInt16BE, false)\n    pins.i2cWriteNumber(57, 84, NumberFormat.UInt8BE, true)\n    B = pins.i2cReadNumber(57, NumberFormat.UInt16BE, false)\n    RMAP = Math.round(Math.round(R / 90))\n    RMAP = Math.round(Math.round(G / 100))\n    RMAP = Math.round(Math.round(B / 80))\n    COLOR_CHIK()\n    basic.showString(COLOR)\n    basic.pause(1000)\n    basic.clearScreen()\n})\n"]],"start1":0,"start2":0,"length1":1713,"length2":1}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,".md\""],[-1,",\n        \"main.py\""],[0,"\n   "]],"start1":226,"start2":226,"length1":27,"length2":8},{"diffs":[[0,"itor\": \""],[-1,"t"],[1,"block"],[0,"sprj\"\n}\n"]],"start1":254,"start2":254,"length1":17,"length2":21}]},{"type":"added","filename":"main.py","value":"def COLOR_CHIK():\n    global MIN, COLOR\n    MAX = 0\n    BMAP = 0\n    GMAP = 0\n    MIN = 800\n    MIN = 250\n    if RMAP + (GMAP + BMAP) > MAX:\n        COLOR = \"WHT\"\n    if RMAP + (GMAP + BMAP) <= MIN:\n        COLOR = \"BLK\"\n        if RMAP + (GMAP + BMAP) < MAX and RMAP + (GMAP + BMAP) > MIN:\n            if RMAP > GMAP and RMAP > BMAP:\n                COLOR = \"RED\"\n            if GMAP > RMAP and GMAP > BMAP:\n                COLOR = \"GRN\"\n            if BMAP > RMAP and BMAP > GMAP:\n                COLOR = \"BLU\"\nB = 0\nG = 0\nR = 0\nCOLOR = \"\"\nRMAP = 0\nMIN = 0\npins.i2c_write_number(57, 16587, NumberFormat.UINT16_BE, False)\npins.i2c_write_number(57, 16396, NumberFormat.UINT16_BE, True)\npins.i2c_write_number(57, 16640, NumberFormat.UINT16_BE, True)\npins.i2c_write_number(57, 17041, NumberFormat.UINT16_BE, True)\npins.i2c_write_number(57, 17410, NumberFormat.UINT16_BE, True)\npins.i2c_write_number(57, 24576, NumberFormat.UINT16_BE, False)\n\n\ndef on_forever():\n    global R, G, B, RMAP\n    pins.i2c_write_number(57, 80, NumberFormat.UINT8_BE, True)\n    R = pins.i2c_read_number(57, NumberFormat.UINT16_BE, False)\n    pins.i2c_write_number(57, 82, NumberFormat.UINT8_BE, True)\n    G = pins.i2c_read_number(57, NumberFormat.UINT16_BE, False)\n    pins.i2c_write_number(57, 84, NumberFormat.UINT8_BE, True)\n    B = pins.i2c_read_number(57, NumberFormat.UINT16_BE, False)\n    RMAP = Math.round(Math.round(R / 90))\n    RMAP = Math.round(Math.round(G / 100))\n    RMAP = Math.round(Math.round(B / 80))\n    COLOR_CHIK()\n    basic.show_string(COLOR)\n    basic.pause(1000)\n    basic.clear_screen()\nbasic.forever(on_forever)\n\n"}]},{"timestamp":1727587927621,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"//% wetght=100 color=#0080ff icon=\"\\uf1b2\"\nnamespace カラーセンサー {"],[0,"\nfun"]],"start1":0,"start2":0,"length1":66,"length2":4}]}]},{"timestamp":1727588681095,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"ーセンサー {\n"],[-1,"    \n"],[0,"function"]],"start1":55,"start2":55,"length1":21,"length2":16}]}]},{"timestamp":1727588684515,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"ー {\n"],[-1,"\n//% block=\"COLOR_check\"\n    export　"],[1,"    "],[0,"\nfun"]],"start1":59,"start2":59,"length1":44,"length2":12}]}]},{"timestamp":1727589283835,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"  export"],[-1," "],[1,"　\n"],[0,"function"]],"start1":90,"start2":90,"length1":17,"length2":18},{"diffs":[[0,"se)\n"],[-1,"\n//% block=\"初期化\"\n    export "],[0,"basi"]],"start1":1181,"start2":1181,"length1":36,"length2":8},{"diffs":[[0,"en()\n})\n"],[-1,"}"]],"start1":1804,"start2":1804,"length1":9,"length2":8}]}]},{"timestamp":1727589580046,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"false)\n\n"],[1,"//% block=\"初期化\"\n    export"],[0," basic.f"]],"start1":1177,"start2":1177,"length1":16,"length2":42}]}]},{"timestamp":1727590255159,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0," x=\""],[1,"2"],[0,"0\" y=\""],[1,"2"],[0,"0\"><"]],"start1":104,"start2":104,"length1":14,"length2":16}]}]},{"timestamp":1727616652605,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"art\""],[-1," id=\"l0lj$9i_VmX0tF0FY}ja\""],[0," x=\""]],"start1":100,"start2":100,"length1":34,"length2":8},{"diffs":[[0,"ent\""],[-1," id=\"J/g4TEXAtCUbvcH(bNzc\""],[0,"><mu"]],"start1":173,"start2":173,"length1":34,"length2":8}]}]},{"timestamp":1727616935143,"editorVersion":"7.0.42","changes":[{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0," ],\n"],[-1,"    \"testFiles\": [\n        \"test.ts\"\n    ],\n"],[0,"    "]],"start1":253,"start2":253,"length1":52,"length2":8}]},{"type":"added","filename":"test.ts","value":"// テストはここに来ます。このパッケージが拡張機能として使用されるときにはコンパイルされません。\n"}]}],"snapshots":[{"timestamp":1727585222641,"editorVersion":"7.0.42","text":{"main.blocks":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>","main.ts":"\n","README.md":"","pxt.json":"{\n    \"name\": \"拡張ブロックBH1745NUC\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"additionalFilePaths\": []\n}\n"}},{"timestamp":1727587875203,"editorVersion":"7.0.42","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"0\" y=\"0\"></block><block type=\"device_forever\" x=\"205\" y=\"0\"></block></xml>","main.ts":"","README.md":"","pxt.json":"{\n    \"name\": \"拡張ブロックBH1745NUC\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"blocksprj\"\n}\n"}},{"timestamp":1727590255159,"editorVersion":"7.0.42","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables></xml>","main.ts":"//% wetght=100 color=#0080ff icon=\"\\uf1b2\"\nnamespace カラーセンサー {\n\n//% block=\"COLOR_check\"\n    export function COLOR_CHIK() {\n    \n    let MAX = 0\n    let BMAP = 0\n    let GMAP = 0\n    MIN = 800\n    MIN = 250\n    if (RMAP + (GMAP + BMAP) > MAX) {\n        COLOR = \"WHT\"\n    }\n    \n    if (RMAP + (GMAP + BMAP) <= MIN) {\n        COLOR = \"BLK\"\n        if (RMAP + (GMAP + BMAP) < MAX && RMAP + (GMAP + BMAP) > MIN) {\n            if (RMAP > GMAP && RMAP > BMAP) {\n                COLOR = \"RED\"\n            }\n            \n            if (GMAP > RMAP && GMAP > BMAP) {\n                COLOR = \"GRN\"\n            }\n            \n            if (BMAP > RMAP && BMAP > GMAP) {\n                COLOR = \"BLU\"\n            }\n            \n        }\n        \n    }\n    \n}\n\nlet B = 0\nlet G = 0\nlet R = 0\nlet COLOR = \"\"\nlet RMAP = 0\nlet MIN = 0\npins.i2cWriteNumber(57, 16587, NumberFormat.UInt16BE, false)\npins.i2cWriteNumber(57, 16396, NumberFormat.UInt16BE, true)\npins.i2cWriteNumber(57, 16640, NumberFormat.UInt16BE, true)\npins.i2cWriteNumber(57, 17041, NumberFormat.UInt16BE, true)\npins.i2cWriteNumber(57, 17410, NumberFormat.UInt16BE, true)\npins.i2cWriteNumber(57, 24576, NumberFormat.UInt16BE, false)\n\n//% block=\"初期化\"\n    export basic.forever(function on_forever() {\n    \n    pins.i2cWriteNumber(57, 80, NumberFormat.UInt8BE, true)\n    R = pins.i2cReadNumber(57, NumberFormat.UInt16BE, false)\n    pins.i2cWriteNumber(57, 82, NumberFormat.UInt8BE, true)\n    G = pins.i2cReadNumber(57, NumberFormat.UInt16BE, false)\n    pins.i2cWriteNumber(57, 84, NumberFormat.UInt8BE, true)\n    B = pins.i2cReadNumber(57, NumberFormat.UInt16BE, false)\n    RMAP = Math.round(Math.round(R / 90))\n    RMAP = Math.round(Math.round(G / 100))\n    RMAP = Math.round(Math.round(B / 80))\n    COLOR_CHIK()\n    basic.showString(COLOR)\n    basic.pause(1000)\n    basic.clearScreen()\n})\n}","README.md":"","main.py":"def COLOR_CHIK():\n    global MIN, COLOR\n    MAX = 0\n    BMAP = 0\n    GMAP = 0\n    MIN = 800\n    MIN = 250\n    if RMAP + (GMAP + BMAP) > MAX:\n        COLOR = \"WHT\"\n    if RMAP + (GMAP + BMAP) <= MIN:\n        COLOR = \"BLK\"\n        if RMAP + (GMAP + BMAP) < MAX and RMAP + (GMAP + BMAP) > MIN:\n            if RMAP > GMAP and RMAP > BMAP:\n                COLOR = \"RED\"\n            if GMAP > RMAP and GMAP > BMAP:\n                COLOR = \"GRN\"\n            if BMAP > RMAP and BMAP > GMAP:\n                COLOR = \"BLU\"\nB = 0\nG = 0\nR = 0\nCOLOR = \"\"\nRMAP = 0\nMIN = 0\npins.i2c_write_number(57, 16587, NumberFormat.UINT16_BE, False)\npins.i2c_write_number(57, 16396, NumberFormat.UINT16_BE, True)\npins.i2c_write_number(57, 16640, NumberFormat.UINT16_BE, True)\npins.i2c_write_number(57, 17041, NumberFormat.UINT16_BE, True)\npins.i2c_write_number(57, 17410, NumberFormat.UINT16_BE, True)\npins.i2c_write_number(57, 24576, NumberFormat.UINT16_BE, False)\n\n\ndef on_forever():\n    global R, G, B, RMAP\n    pins.i2c_write_number(57, 80, NumberFormat.UINT8_BE, True)\n    R = pins.i2c_read_number(57, NumberFormat.UINT16_BE, False)\n    pins.i2c_write_number(57, 82, NumberFormat.UINT8_BE, True)\n    G = pins.i2c_read_number(57, NumberFormat.UINT16_BE, False)\n    pins.i2c_write_number(57, 84, NumberFormat.UINT8_BE, True)\n    B = pins.i2c_read_number(57, NumberFormat.UINT16_BE, False)\n    RMAP = Math.round(Math.round(R / 90))\n    RMAP = Math.round(Math.round(G / 100))\n    RMAP = Math.round(Math.round(B / 80))\n    COLOR_CHIK()\n    basic.show_string(COLOR)\n    basic.pause(1000)\n    basic.clear_screen()\nbasic.forever(on_forever)\n\n","pxt.json":"{\n    \"name\": \"拡張ブロックBH1745NUC\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"main.py\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}},{"timestamp":1727616652605,"editorVersion":"7.0.42","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"20\" y=\"20\"><statement name=\"HANDLER\"><block type=\"typescript_statement\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" line0=\"namespace カラーセンサー {\" line1=\"\" line2=\"//% block=&quot;COLOR_check&quot;\" line3=\"    export function COLOR_CHIK() {\" line4=\"    \" line5=\"    let MAX = 0\" line6=\"    let BMAP = 0\" line7=\"    let GMAP = 0\" line8=\"    MIN = 800\" line9=\"    MIN = 250\" line10=\"    if (RMAP + (GMAP + BMAP) &gt; MAX) {\" line11=\"        COLOR = &quot;WHT&quot;\" line12=\"    }\" line13=\"    \" line14=\"    if (RMAP + (GMAP + BMAP) &lt;= MIN) {\" line15=\"        COLOR = &quot;BLK&quot;\" line16=\"        if (RMAP + (GMAP + BMAP) &lt; MAX &amp;&amp; RMAP + (GMAP + BMAP) &gt; MIN) {\" line17=\"            if (RMAP &gt; GMAP &amp;&amp; RMAP &gt; BMAP) {\" line18=\"                COLOR = &quot;RED&quot;\" line19=\"            }\" line20=\"            \" line21=\"            if (GMAP &gt; RMAP &amp;&amp; GMAP &gt; BMAP) {\" line22=\"                COLOR = &quot;GRN&quot;\" line23=\"            }\" line24=\"            \" line25=\"            if (BMAP &gt; RMAP &amp;&amp; BMAP &gt; GMAP) {\" line26=\"                COLOR = &quot;BLU&quot;\" line27=\"            }\" line28=\"            \" line29=\"        }\" line30=\"        \" line31=\"    }\" line32=\"    \" line33=\"}\" line34=\"\" line35=\"let B = 0\" line36=\"let G = 0\" line37=\"let R = 0\" line38=\"let COLOR = &quot;&quot;\" line39=\"let RMAP = 0\" line40=\"let MIN = 0\" line41=\"pins.i2cWriteNumber(57, 16587, NumberFormat.UInt16BE, false)\" line42=\"pins.i2cWriteNumber(57, 16396, NumberFormat.UInt16BE, true)\" line43=\"pins.i2cWriteNumber(57, 16640, NumberFormat.UInt16BE, true)\" line44=\"pins.i2cWriteNumber(57, 17041, NumberFormat.UInt16BE, true)\" line45=\"pins.i2cWriteNumber(57, 17410, NumberFormat.UInt16BE, true)\" line46=\"pins.i2cWriteNumber(57, 24576, NumberFormat.UInt16BE, false)\" line47=\"\" line48=\" basic.forever(function on_forever() {\" line49=\"    \" line50=\"    pins.i2cWriteNumber(57, 80, NumberFormat.UInt8BE, true)\" line51=\"    R = pins.i2cReadNumber(57, NumberFormat.UInt16BE, false)\" line52=\"    pins.i2cWriteNumber(57, 82, NumberFormat.UInt8BE, true)\" line53=\"    G = pins.i2cReadNumber(57, NumberFormat.UInt16BE, false)\" line54=\"    pins.i2cWriteNumber(57, 84, NumberFormat.UInt8BE, true)\" line55=\"    B = pins.i2cReadNumber(57, NumberFormat.UInt16BE, false)\" line56=\"    RMAP = Math.round(Math.round(R / 90))\" line57=\"    RMAP = Math.round(Math.round(G / 100))\" line58=\"    RMAP = Math.round(Math.round(B / 80))\" line59=\"    COLOR_CHIK()\" line60=\"    basic.showString(COLOR)\" line61=\"    basic.pause(1000)\" line62=\"    basic.clearScreen()\" line63=\"})\" line64=\"}\" numlines=\"65\"></mutation></block></statement></block></xml>","main.ts":"","README.md":"","main.py":"def COLOR_CHIK():\n    global MIN, COLOR\n    MAX = 0\n    BMAP = 0\n    GMAP = 0\n    MIN = 800\n    MIN = 250\n    if RMAP + (GMAP + BMAP) > MAX:\n        COLOR = \"WHT\"\n    if RMAP + (GMAP + BMAP) <= MIN:\n        COLOR = \"BLK\"\n        if RMAP + (GMAP + BMAP) < MAX and RMAP + (GMAP + BMAP) > MIN:\n            if RMAP > GMAP and RMAP > BMAP:\n                COLOR = \"RED\"\n            if GMAP > RMAP and GMAP > BMAP:\n                COLOR = \"GRN\"\n            if BMAP > RMAP and BMAP > GMAP:\n                COLOR = \"BLU\"\nB = 0\nG = 0\nR = 0\nCOLOR = \"\"\nRMAP = 0\nMIN = 0\npins.i2c_write_number(57, 16587, NumberFormat.UINT16_BE, False)\npins.i2c_write_number(57, 16396, NumberFormat.UINT16_BE, True)\npins.i2c_write_number(57, 16640, NumberFormat.UINT16_BE, True)\npins.i2c_write_number(57, 17041, NumberFormat.UINT16_BE, True)\npins.i2c_write_number(57, 17410, NumberFormat.UINT16_BE, True)\npins.i2c_write_number(57, 24576, NumberFormat.UINT16_BE, False)\n\n\ndef on_forever():\n    global R, G, B, RMAP\n    pins.i2c_write_number(57, 80, NumberFormat.UINT8_BE, True)\n    R = pins.i2c_read_number(57, NumberFormat.UINT16_BE, False)\n    pins.i2c_write_number(57, 82, NumberFormat.UINT8_BE, True)\n    G = pins.i2c_read_number(57, NumberFormat.UINT16_BE, False)\n    pins.i2c_write_number(57, 84, NumberFormat.UINT8_BE, True)\n    B = pins.i2c_read_number(57, NumberFormat.UINT16_BE, False)\n    RMAP = Math.round(Math.round(R / 90))\n    RMAP = Math.round(Math.round(G / 100))\n    RMAP = Math.round(Math.round(B / 80))\n    COLOR_CHIK()\n    basic.show_string(COLOR)\n    basic.pause(1000)\n    basic.clear_screen()\nbasic.forever(on_forever)\n\n","pxt.json":"{\n    \"name\": \"拡張ブロックBH1745NUC\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"main.py\"\n    ],\n    \"preferredEditor\": \"blocksprj\"\n}\n"}}],"shares":[],"lastSaveTime":1727616935147}